<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mac on Y&amp;F</title>
    <link>https://qianfuxin.gitHub.io/tags/mac/</link>
    <description>Recent content in Mac on Y&amp;F</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 05 Apr 2025 10:58:08 +0000</lastBuildDate>
    <atom:link href="https://qianfuxin.gitHub.io/tags/mac/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>mac的Chrome自动化</title>
      <link>https://qianfuxin.gitHub.io/post/mac%E7%9A%84chrome%E8%87%AA%E5%8A%A8%E5%8C%96/</link>
      <pubDate>Sat, 05 Apr 2025 10:58:08 +0000</pubDate>
      <guid>https://qianfuxin.gitHub.io/post/mac%E7%9A%84chrome%E8%87%AA%E5%8A%A8%E5%8C%96/</guid>
      <description>&lt;h1 id=&#34;配置驱动&#34;&gt;配置驱动&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install chromedriver&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;开启chrome&#34;&gt;开启Chrome&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://gist.github.com/QianFuXin/545636e829e2e587e5e5b69bf97be6c7&#34;&gt;start-chrome-debug.sh&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chmod +x start-chrome-debug.sh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./start-chrome-debug.sh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;浏览器自动化示例代码&#34;&gt;浏览器自动化示例代码&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip install selenium&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://gist.github.com/QianFuXin/05ec9a0ba477328814d5acd0e3baaf51&#34;&gt;selenium_chrome_demo.py&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>mac使用clash后解决gitSSH不能使用的问题</title>
      <link>https://qianfuxin.gitHub.io/post/mac&#43;clash&#43;gitssh%E4%BB%A3%E7%90%86/</link>
      <pubDate>Tue, 21 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://qianfuxin.gitHub.io/post/mac&#43;clash&#43;gitssh%E4%BB%A3%E7%90%86/</guid>
      <description>&lt;h1 id=&#34;起因&#34;&gt;起因&lt;/h1&gt;&#xA;&lt;p&gt;有一天使用git ssh 拉取代码，发现网络卡住，密钥已经录入GitHub，所以只可能是网络不通畅的原因。&lt;/p&gt;&#xA;&lt;h1 id=&#34;解放方案&#34;&gt;解放方案&lt;/h1&gt;&#xA;&lt;p&gt;&lt;code&gt;vim ~/.ssh/config&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Host github.com&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  HostName ssh.github.com&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Port &lt;span style=&#34;color:#ae81ff&#34;&gt;443&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  User git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>mac使用tesseract识别中文</title>
      <link>https://qianfuxin.gitHub.io/post/mac%E4%BD%BF%E7%94%A8tesseract%E8%AF%86%E5%88%AB%E4%B8%AD%E6%96%87/</link>
      <pubDate>Sun, 22 Sep 2024 10:58:08 +0000</pubDate>
      <guid>https://qianfuxin.gitHub.io/post/mac%E4%BD%BF%E7%94%A8tesseract%E8%AF%86%E5%88%AB%E4%B8%AD%E6%96%87/</guid>
      <description>&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;&#xA;&lt;p&gt;brew install tesseract&lt;/p&gt;&#xA;&lt;h1 id=&#34;添加中文支持&#34;&gt;添加中文支持&lt;/h1&gt;&#xA;&lt;p&gt;下载包&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tesseract-ocr/tessdata/blob/main/chi_sim.traineddata&#34;&gt;https://github.com/tesseract-ocr/tessdata/blob/main/chi_sim.traineddata&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://qianfuxin.gitHub.io/images/mac%E4%BD%BF%E7%94%A8tesseract%E8%AF%86%E5%88%AB%E4%B8%AD%E6%96%87_1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;使用&#34;&gt;使用&lt;/h1&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://qianfuxin.gitHub.io/images/mac%E4%BD%BF%E7%94%A8tesseract%E8%AF%86%E5%88%AB%E4%B8%AD%E6%96%87_2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;tesseract picture_path out -l chi_sim&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>mac使用FishSpeech实现指定音色tts</title>
      <link>https://qianfuxin.gitHub.io/post/mac%E4%BD%BF%E7%94%A8fishspeech%E5%AE%9E%E7%8E%B0%E6%8C%87%E5%AE%9A%E9%9F%B3%E8%89%B2tts/</link>
      <pubDate>Sat, 21 Sep 2024 10:58:08 +0000</pubDate>
      <guid>https://qianfuxin.gitHub.io/post/mac%E4%BD%BF%E7%94%A8fishspeech%E5%AE%9E%E7%8E%B0%E6%8C%87%E5%AE%9A%E9%9F%B3%E8%89%B2tts/</guid>
      <description>&lt;p&gt;&lt;strong&gt;下述推理代码都使用cpu进行处理（使用mps走不通&lt;/strong&gt; ）&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;参考&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://speech.fish.audio/zh/inference/&#34;&gt;https://speech.fish.audio/zh/inference/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;环境与模型&#34;&gt;环境与模型&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/fishaudio/fish-speech.git&#xA;cd fish-speech&#xA;# 环境&#xA;conda create -n fish-speech python=3.10&#xA;conda activate fish-speech&#xA;# 依赖包&#xA;pip install torch==2.4.1 torchvision==0.19.1 torchaudio==2.4.1&#xA;pip install -e &amp;quot;.[stable]&amp;quot;&#xA;# 下载模型&#xA;HF_ENDPOINT=https://hf-mirror.com huggingface-cli download fishaudio/fish-speech-1.5 --local-dir checkpoints/fish-speech-1.5&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;基本流程&#34;&gt;基本流程&lt;/h1&gt;&#xA;&lt;h2 id=&#34;提取音色&#34;&gt;提取音色&lt;/h2&gt;&#xA;&lt;p&gt;下面的paimon.wav也可以是mp3文件，最终会生成一个&lt;code&gt;fake.npy&lt;/code&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;python tools/vqgan/inference.py --device cpu \&#xA;    -i &amp;quot;paimon.wav&amp;quot; \&#xA;    --checkpoint-path &amp;quot;checkpoints/fish-speech-1.5/firefly-gan-vq-fsq-8x1024-21hz-generator.pth&amp;quot;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;生成语音&#34;&gt;生成语音&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;python tools/llama/generate.py --device cpu \&#xA;    --text &amp;quot;你要生成的文本&amp;quot; \&#xA;    --prompt-text &amp;quot;你提供语音中的文本&amp;quot; \&#xA;    --prompt-tokens &amp;quot;fake.npy&amp;quot; \&#xA;    --checkpoint-path &amp;quot;checkpoints/fish-speech-1.5&amp;quot; \&#xA;    --num-samples 1 \&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;会生成一个codes_0.npy，下面将codes_0.npy转换为音频文件&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
